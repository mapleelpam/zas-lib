<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	width="600"
	height="400"
	frameRate="100"
	creationComplete="creationComplete()"
	enterFrame="enterFrame(event)"
	currentState="Game">
	<mx:states>
		<mx:State
			name="Game" id="gameState"
			enterState="enterGame(event)"
			exitState="exitGame(event)">
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="10" id="skin_0" click="GameObjectManager.Instance.changeAvatarID(0)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="50" id="skin_1" click="GameObjectManager.Instance.changeAvatarID(1)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="90" id="skin_2" click="GameObjectManager.Instance.changeAvatarID(2)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="129" id="skin_3" click="GameObjectManager.Instance.changeAvatarID(3)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="168" id="skin_4" click="GameObjectManager.Instance.changeAvatarID(4)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="210" id="skin_5" click="GameObjectManager.Instance.changeAvatarID(5)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Image x="338" y="250" id="skin_6" click="GameObjectManager.Instance.changeAvatarID(6)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:TextArea x="378" y="9" height="381" id="debugArea" editable="false" enabled="true" color="#A00404" chromeColor="#C8C8C8" fontWeight="bold" borderVisible="false" width="211" selectable="false"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Button x="89" y="369" label="登录" id="loginButton" click="loginButton_clickHandler(event)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Button x="11" y="369" label="用户信息" id="toUserInfo" click="toUserInfo_clickHandler(event)"/>
			</mx:AddChild>
			<mx:SetProperty target="{myCanvas}" name="width" value="599"/>
		</mx:State>
		<mx:State name="UserInfo">
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:TextInput x="146" y="143" text="maple_3" id="userNameInput"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:TextInput x="146" y="173" text="hello_2" displayAsPassword="true" id="userPasswordInput"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Label x="146" y="95" text="avatar 0.2 版本"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Button x="237" y="229" label="确定" id="changeInfoButton" click="changeInfoButton_clickHandler(event)"/>
			</mx:AddChild>
			<mx:AddChild relativeTo="{myCanvas}" position="lastChild">
				<mx:Button x="122" y="229" label="取消" id="cancelButton" click="cancelButton_clickHandler(event)"/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Canvas x="0" y="0" width="100%" height="100%" id="myCanvas" />
	<mx:Script>
		<![CDATA[
			import com.zillians.cloud.ServiceEngine;
			import com.zillians.event.ZilliansEvent;
			import com.zillians.event.ZilliansEventDispatcher;
			import com.zillians.logger.Logger;
			import com.zillians.proxy.SocketProxy;
			import com.zillians.resource.Localizator;
			import com.zillians.service.GameService;
			import com.zillians.service.SystemService;
			import com.zillians.service.TokenService;
			
			import demo.avatar.AvatarSkin;
			import demo.avatar.GameObjectManager;
			
			import generated.avatar.*;
			import generated.avatar.local_player.RpcFunctions;
			import generated.avatar.remote_player.RpcFunctions;
			
			import mx.events.FlexEvent;
			
			protected var inGame:Boolean = false;
			
			public var userName:String = "";
			public var userPassword:String = "";

			//zillians================================================
			private var svcEngine:ServiceEngine;
			
			
			//公有方法=================================================
			public function creationComplete():void
			{
				debugArea.addEventListener(FlexEvent.VALUE_COMMIT,VALUE_COMMITHandler); 
				
				SystemService.getInstance().addEventListener(
					SystemService.t_sys_config_loaded
					,afterSysConfigLoadSuccess);
				SystemService.getInstance().addEventListener(
					SystemService.t_sys_config_error
					,system_load_error);
				
				SystemService.getInstance().initSystem("config/config_avatar.xml");
				
				ZilliansEventDispatcher.instance().addEventListener(
					ZilliansEventDispatcher.event_cloud_response_auth_ok,
					afterAuthOK);//身份验证服务器認證成功
			}
			
			
			//私有方法=====================================================
			private function afterSysConfigLoadSuccess(e:Event):void{
				if(Logger.getInstance().isInfo()){
					Logger.getInstance().log(Localizator.getInstance().getText("system.init.success"),"avatar");
				}
				debugArea.text += Localizator.getInstance().getText("system.init.success")+"\n";
				SocketProxy.init(null);
				svcEngine = new ServiceEngine();
				//currentState = "LoginState";
				
				ZilliansEventDispatcher.instance().addEventListener(
					svcEngine.tokenService.getServiceName()+IOErrorEvent.IO_ERROR
					, function (e:ZilliansEvent):void
					{
						debugArea.text += svcEngine.tokenService.getServiceName() + "-"
						+Localizator.getInstance().getText("socket.ioError")+"\n";
					} );
				ZilliansEventDispatcher.instance().addEventListener(
					svcEngine.tokenService.getServiceName()+SecurityErrorEvent.SECURITY_ERROR
					, function (e:ZilliansEvent):void
					{
						debugArea.text += svcEngine.tokenService.getServiceName() + "-"
						+Localizator.getInstance().getText("socket.securityError")+"\n";
					} );
			}
			
			private function system_load_error(e:Event):void{
				debugArea.text += "(!) System Service Initialize Error\n";
				//				debug.text += Localizator.getInstance().getText("system.init.error")+"\n";
				//				can't access resource file right now
			}
			
			
			private function afterAuthOK(event:Event):void
			{
				if(Logger.getInstance().isInfo()){
					Logger.getInstance().log(Localizator.getInstance().getText("token.auth.ok"),"avatar");
				}
				
				debugArea.text += Localizator.getInstance().getText("ui.debug.logged_in" )+"\n";
				
				//currentState = "HelloState";
				// Attach Stub (Generate by compiler) and Service
				svcEngine.gameService.gameFunctionDispatcher = new generated.avatar.FunctionDispatcher();
				
				generated.avatar.local_player.RpcFunctions.registerID = function( id:uint ):void {
					debugArea.text += Localizator.getInstance().getText("avatar.info.registerID" ) + id + "\n";
					GameObjectManager.Instance.registerID( id );
				}
					
				
				generated.avatar.remote_player.RpcFunctions.remoteLogin = function( id:uint ):void {
					debugArea.text += Localizator.getInstance().getText("avatar.info.remoteLogin" ) + id + "\n";
					GameObjectManager.Instance.remoteLogin( id );
				}
				
				generated.avatar.remote_player.RpcFunctions.remoteLogout = function( id:uint ):void {
					debugArea.text += Localizator.getInstance().getText("avatar.info.remoteLogout" ) + id + "\n";
					GameObjectManager.Instance.remoteLogout( id );
				}
				
				generated.avatar.remote_player.RpcFunctions.remoteTryMove = function( id:uint, x:uint, y:uint ):void {
					//debugArea.text += Localizator.getInstance().getText("avatar.info.remoteTryMove" ) + id + "\n";
					GameObjectManager.Instance.remoteTryMove( id, x, y );
				}
				
				generated.avatar.remote_player.RpcFunctions.remoteChangeDirection = function( id:uint, dir:uint ):void {
					debugArea.text += Localizator.getInstance().getText("avatar.info.remoteChangeDirection" ) + id + "|" + dir + "\n";
					GameObjectManager.Instance.remoteChangeDirection( id, dir );
				}
				
				generated.avatar.remote_player.RpcFunctions.remoteChangeAvatar = function( id:uint, avatar_id:uint ):void {
					debugArea.text += Localizator.getInstance().getText("avatar.info.remoteChangeAvatar" ) + id + "\n";
					GameObjectManager.Instance.remoteChangeAvatar( id, avatar_id );
				}
			}
			
			
			
			
			
			
			public function enterFrame(event:Event):void
			{
				if(inGame)
				{
					GameObjectManager.Instance.enterFrame();
					myCanvas.graphics.clear();
					myCanvas.graphics.beginBitmapFill (GameObjectManager.Instance.backBuffer,null,false,
						false);
					myCanvas.graphics.drawRect(0,0,this.width,this.height);
					myCanvas.graphics.endFill();
				}
			}
			
			protected function enterGame(event:Event):void
			{
				GameObjectManager.Instance.startup();
				inGame=true;
				
				var avatarImg:AvatarSkin = AvatarSkin.Instance;
				skin_0.addChild( avatarImg.getImage(0,0,1) );
				skin_1.addChild( avatarImg.getImage(1,0,1) );
				skin_2.addChild( avatarImg.getImage(2,0,1) );
				skin_3.addChild( avatarImg.getImage(3,0,1) );
				skin_4.addChild( avatarImg.getImage(4,0,1) );
				skin_5.addChild( avatarImg.getImage(5,0,1) );
				skin_6.addChild( avatarImg.getImage(6,0,1) );
			}
			protected function exitGame(event:Event):void
			{
				inGame=false;
			}
			
			
			//界面按钮单击事件响应函数=====================================================
			protected function loginButton_clickHandler(event:MouseEvent):void
			{
				svcEngine.cloudLogin( userName, userPassword );
				debugArea.text +=  Localizator.getInstance().getText("ui.debug.try_login" )+"\n";
				
				this.stage.focus = myCanvas;
				this.stage.addEventListener( KeyboardEvent.KEY_DOWN, GameObjectManager.Instance.onKeyDown );
				this.stage.addEventListener( KeyboardEvent.KEY_UP, GameObjectManager.Instance.onKeyUp );
				enterGame(null);
			}


			protected function changeInfoButton_clickHandler(event:MouseEvent):void
			{
				userName = userNameInput.text;
				userPassword = userPasswordInput.text;
				currentState = "Game";
			}


			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				currentState = "Game";
			}


			protected function toUserInfo_clickHandler(event:MouseEvent):void
			{
				currentState = "UserInfo";
				userNameInput.text = userName;
				userPasswordInput.text = userPassword;
			}
			private function VALUE_COMMITHandler(evt:Event):void{ 
				debugArea.verticalScrollPosition = debugArea.maxVerticalScrollPosition;
			}

		]]>
	</mx:Script>
</mx:Application> 
